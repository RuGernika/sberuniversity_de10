#############################################################################################
#     BASH SCRIPT                                                                           #
#############################################################################################


#-------------------------------------------------------------------------------------------#
#                                         1.sh                                              #
#-------------------------------------------------------------------------------------------#


#!/bin/bash  
#1. Известно что для архивации файлов существует пакет gzip, который работает только с файлами. Также есть пакет tar, который может объединять файлы в один. Приведите команду, которая запаковывает все файлы с #расширением log в каталоге /home/de10/de/files в архив quiz.tar.gz, при этом использует максимальную степень сжатия.
#| gzip -9 > quiz.tar.gz

tar -c  /home/de10/de/files/*.sh | gzip -9 > quiz.tar.gz  

#-------------------------------------------------------------------------------------------#
#                                         2.sh                                              #
#-------------------------------------------------------------------------------------------#

#!/bin/bash  
#2. Имеется скрипт quiz.sh:
#[de1m@data-engineering ~]$ ls -l /home/myuser/
#-rw-r--r-- 1 myuser mygroup 1024 Jan 26 14:21 quiz.sh
#
#Нужно сделать так, чтобы:
#a) файл могли запускать все
#b) файл могли изменять владелец и группа
#c) все пользователи сервера, не являющиеся владельцем и не входящие в его группу, не могли читать этот файл
#
#Приведите пример команды chmod, которая выдает или отбирает минимально необходимое количество прав (например, не надо выдавать права на чтение владельцу - они и так у него есть).
#  chmod 764 - все для владельца, чтение и запись для группы, и только чтение для остальных
# 0 - никаких прав;
# 1 - только выполнение;
# 2 - только запись;
# 3 - выполнение и запись;
# 4 -  только чтение;
# 5 - чтение и выполнение;
# 6 - чтение и запись;
# 7 - чтение запись и выполнение.

echo 'файл могут запускать все'
chmod -c +111  /home/myuser/quiz.sh 
ls -l  /home/myuser/quiz.sh

echo 'файл могут изменять владелец и группа'
chmod -c +220 /home/myuser/quiz.sh  
ls -l  /home/myuser/quiz.sh

echo 'все пользователи сервера, не являющиеся владельцем и не входящие в его группу, не могут читать этот файл'
chmod -c -4  /home/myuser/quiz.sh
ls -l  /home/myuser/quiz.sh

#-------------------------------------------------------------------------------------------#
#                                         3.sh                                              #
#-------------------------------------------------------------------------------------------#

#!/bin/bash  
#3. Напишите bash-скрипт, сохраняющий все запущенные процессы пользователя de10 в файл processes.txt. 
#В задаче есть допущение что имя процесса не может содержать слово de10.
 
 ps -ef | grep '^de10' | awk '{print $8}'| grep -v 'de10'   > processes.txt

#-------------------------------------------------------------------------------------------#
#                                         4.sh                                              #
#-------------------------------------------------------------------------------------------#

#!/bin/bash  
#4. Напишите bash-скрипт, сохраняющий подробное описание объектов, расположенных в каталоге /home/de10, но не принадлежащих пользователю de10 (владелец не de10) в файл description.txt. 
#В задаче есть допущение что имя файла или группы не может содержать слово de10.


RESULT=$(ls -la /home/de10 | awk '{print $3,$4, $9}' | grep -v 'de10' | awk '{print $3}');

 for i in $RESULT 
   do  ls -la -d /home/de10/$i >> description.txt
 done 

#-------------------------------------------------------------------------------------------#
#                                         5.sh                                              #
#-------------------------------------------------------------------------------------------#

#!/bin/bash  
#5. Составьте crontab файл для следующих процессов:
#daily1.sh - ежедневно в 23:55.
#daily2.sh - ежедневно в 8:00 и 17:00
#hourly.sh - каждый час в рабочее время (пн-пт, 8:00-17:30)
#happy_new_year.sh - в момент наступления нового года
#quatre.sh - каждые 4 часа

crontab -l > crontab_5 
echo "55 23 */1 * *   daily1.sh" >> crontab_5 
echo "00 8,17 */1 * *  daily2.sh" >> crontab_5
echo "00 *  8-17/1 * 1,2,3,4,5  hourly.sh" >> crontab_5 
echo "0 0 1 1 *   happy_new_year.sh" >> crontab_5
echo "@yearly  happy_new_year.sh" >> crontab_5
echo "0 */4 * * *   quatre.sh" >> crontab_5
crontab crontab_5
rm crontab_5


